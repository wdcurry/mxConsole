# File		mx-Init.cfg
# Desc		Initialization required by mx
#			pulls most plumbing out of main app
# Author	Drew Curry, ApeStaking
# Version	0.9.2
# Date		jan18-2023
# Location	MultiversX's config folder

#!/bin/bash

appVersion="v0.9.2"
appName="MultiversX mxConsole"
echo -e "Initializing ${appName} - ${appVersion}"

# ensure exact path to script file
# this one variable is dup'd in main (initially-called, script)
# SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# source mx-Utility.cfg and set pathways required to function
currentPath=$(dirname $BASH_SOURCE)
source $currentPath/mx-Utility.cfg

#setup mx-oriented folder locations
mxHomeFolder=""
mxScriptFolder=""
mxConfigFolder=""

sourceMultiversXFiles mxHomeFolder mxScriptFolder mxConfigFolder
echo -e "sourcing mx-app based on MultiversX Node software installed at: $mxHomeFolder"

echo -e "Initializing goodPractices-GateKeeper"
nonRootUserGatekeeper

# link to MultiversX source files
source $SCRIPTPATH/config/variables.cfg
source $SCRIPTPATH/config/functions.cfg
source $SCRIPTPATH/config/menu_functions.cfg


# setup node info
mxNodeCount=0
mxZBNodeCount=0	# here zb refers to "zero-based"
mxNodeSeqArray=""	# array derived from seq, which enables mx-oriented calls

getMultiversXNodeInfo mxNodeCount mxZBNodeCount mxNodeSeqArray
mxChainType=${ENVIRONMENT,,}

# titling vars (noting MultiversX sources must be activated first as ENVIRONMENT derives from them)
if [[ $mxNodeCount -gt 1 ]]; then
	nodeCountText=" - #Nodes: $mxNodeCount"
else
        nodeCountText=" - 1 Node"
fi


title="${appName} - Chain: ${mxChainType}$nodeCountText"
lenTitle=${#title}

# ====END====

