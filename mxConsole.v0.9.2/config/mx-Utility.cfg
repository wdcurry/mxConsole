# File          mx-Utility.cfg
# Desc		Some utiilities function better isolate and easiy accessed at startup
# Author        Drew Curry, ApeStaking
# Version       0.9.2
# Date          jan18-2023
# Location      MultiversXs config folder

#!/bin/bash

# ====BASE UTILITY FUNCTION(S)====
# general sys var to let us know if paths are set, likely not used
mxPathsSet=0

#================
# encapsulate the sourcing of MultiversX files, as it needs to be done more than once
# simple theory: this mx-Init.cfg MUST be in the MultiversX config folder. This will then tell us everything with 
#       no need for a CUSTOM_HOME attribute (which is error-prone)
# this also sources all main MultiversX files
# if the caller provides variables as param1, param2, param2, this will set, home & script & config folders for caller
function sourceMultiversXFiles {

	# there are many opinions on how best to get correct paths to a config file
	# todo: is this the safest way?
        multiversXConfigFolder=$(dirname $BASH_SOURCE)
        multiversXScriptFolder=$(dirname $multiversXConfigFolder)
        multiversXHomeFolder=$(dirname $multiversXScriptFolder)

        # until i decide to edit menu_functions.cfg for MultiverX to use my folder setters, we MUST cd into home folder to source.
        #cd $multiversXHomeFolder
        #	better coding obviated this need, lfr
        source $multiversXConfigFolder"/variables.cfg"
        source $multiversXConfigFolder"/menu_functions.cfg"
        source $multiversXConfigFolder"/variables.cfg"

	# link to mx source files
	source $multiversXConfigFolder/mx-Variables.cfg
	source $multiversXConfigFolder/mx-MenuVariables.cfg
	source $multiversXConfigFolder/mx-Functions.cfg

        # set params, if passed
        numParams=$#
        if [[ $numParams -gt 0 ]]; then eval "$1=${multiversXHomeFolder}"; fi
        if [[ $numParams -gt 1 ]]; then eval "$2=${multiversXScriptFolder}"; fi
        if [[ $numParams -gt 2 ]]; then eval "$3=${multiversXConfigFolder}"; fi

	# set general indicator of paths set (may not be used)
	mxPathsSet=1
}

#===============General Utility

function isInteger() {
    [[ ${1} == ?(-)+([0-9]) ]]
}

# just a simple approach at quik debug function to reduce temp coding lines
localCount=0  
function debug() {
	# call when you need simple debugging in routines: debug "test" $test
	localCount+=1
	read -p "<tmp debug> $localCount: $1 is $2" p
}
